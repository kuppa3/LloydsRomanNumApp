#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('lloydsromannumapp:server');
var http = require('http');
var config = require('../config/config');

/**
 * Create HTTP server.
 */
var server = module.exports = http.createServer(app);

/**
 * Get port from environment.
 */
var port = app.get('port');

server.on('error', onError);
server.on('listening', onListening);

server.start = function(callback) {
  //start the web server
  return server.listen(port, function(){
    console.log('Browse your REST API at URL: http://%s:%s', config.serverIp, app.get('port'));
    if (callback) {
      callback(null, server);
    }
  });
};


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}


// start the server if $ node server.js
  if (require.main === module)
    server.start();

